<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="9" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-10-23T22:25:03 PKT" name="Default suite" finished-at="2020-10-23T22:26:16 PKT" duration-ms="73547">
    <groups>
    </groups>
    <test started-at="2020-10-23T22:25:03 PKT" name="Default test" finished-at="2020-10-23T22:26:16 PKT" duration-ms="73547">
      <class name="Products.ProductAPI">
        <test-method is-config="true" signature="TokenGeneration()[pri:0, instance:Products.ProductAPI@7adda9cc]" started-at="2020-10-23T22:24:50 PKT" name="TokenGeneration" finished-at="2020-10-23T22:25:03 PKT" duration-ms="13024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TokenGeneration -->
        <test-method is-config="true" signature="ExtentReport()[pri:0, instance:Products.ProductAPI@7adda9cc]" started-at="2020-10-23T22:25:03 PKT" name="ExtentReport" finished-at="2020-10-23T22:25:04 PKT" duration-ms="857" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExtentReport -->
        <test-method signature="PostProduct()[pri:1, instance:Products.ProductAPI@7adda9cc]" started-at="2020-10-23T22:25:04 PKT" name="PostProduct" finished-at="2020-10-23T22:25:30 PKT" duration-ms="26621" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostProduct -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Products.ProductAPI@7adda9cc]" started-at="2020-10-23T22:25:30 PKT" name="getResult" finished-at="2020-10-23T22:25:32 PKT" duration-ms="1936" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PostProduct status=SUCCESS method=ProductAPI.PostProduct()[pri:1, instance:Products.ProductAPI@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="GetPostedProduct()[pri:2, instance:Products.ProductAPI@7adda9cc]" started-at="2020-10-23T22:25:32 PKT" name="GetPostedProduct" finished-at="2020-10-23T22:25:37 PKT" depends-on-methods="Products.ProductAPI.PostProduct" duration-ms="4680" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetPostedProduct -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Products.ProductAPI@7adda9cc]" started-at="2020-10-23T22:25:37 PKT" name="getResult" finished-at="2020-10-23T22:25:37 PKT" duration-ms="244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetPostedProduct status=SUCCESS method=ProductAPI.GetPostedProduct()[pri:2, instance:Products.ProductAPI@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="DeleteProduct()[pri:3, instance:Products.ProductAPI@7adda9cc]" started-at="2020-10-23T22:25:37 PKT" name="DeleteProduct" finished-at="2020-10-23T22:25:41 PKT" depends-on-methods="Products.ProductAPI.PostProduct" duration-ms="3660" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteProduct -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Products.ProductAPI@7adda9cc]" started-at="2020-10-23T22:25:41 PKT" name="getResult" finished-at="2020-10-23T22:25:41 PKT" duration-ms="208" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteProduct status=SUCCESS method=ProductAPI.DeleteProduct()[pri:3, instance:Products.ProductAPI@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="PostProductwithGreaterThanRequiredNameLength()[pri:4, instance:Products.ProductAPI@7adda9cc]" started-at="2020-10-23T22:25:41 PKT" name="PostProductwithGreaterThanRequiredNameLength" finished-at="2020-10-23T22:25:47 PKT" duration-ms="6059" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostProductwithGreaterThanRequiredNameLength -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Products.ProductAPI@7adda9cc]" started-at="2020-10-23T22:25:47 PKT" name="getResult" finished-at="2020-10-23T22:25:48 PKT" duration-ms="383" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PostProductwithGreaterThanRequiredNameLength status=SUCCESS method=ProductAPI.PostProductwithGreaterThanRequiredNameLength()[pri:4, instance:Products.ProductAPI@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="PostProductwithSpecialCharacterInNme()[pri:5, instance:Products.ProductAPI@7adda9cc]" started-at="2020-10-23T22:25:48 PKT" name="PostProductwithSpecialCharacterInNme" finished-at="2020-10-23T22:25:49 PKT" duration-ms="1648" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostProductwithSpecialCharacterInNme -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Products.ProductAPI@7adda9cc]" started-at="2020-10-23T22:25:49 PKT" name="getResult" finished-at="2020-10-23T22:25:50 PKT" duration-ms="269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PostProductwithSpecialCharacterInNme status=SUCCESS method=ProductAPI.PostProductwithSpecialCharacterInNme()[pri:5, instance:Products.ProductAPI@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="GetAllProducts()[pri:6, instance:Products.ProductAPI@7adda9cc]" started-at="2020-10-23T22:25:50 PKT" name="GetAllProducts" finished-at="2020-10-23T22:26:09 PKT" duration-ms="19794" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAllProducts -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Products.ProductAPI@7adda9cc]" started-at="2020-10-23T22:26:09 PKT" name="getResult" finished-at="2020-10-23T22:26:10 PKT" duration-ms="301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetAllProducts status=SUCCESS method=ProductAPI.GetAllProducts()[pri:6, instance:Products.ProductAPI@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="GetProductByXID()[pri:7, instance:Products.ProductAPI@7adda9cc]" started-at="2020-10-23T22:26:10 PKT" name="GetProductByXID" finished-at="2020-10-23T22:26:12 PKT" duration-ms="2159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetProductByXID -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Products.ProductAPI@7adda9cc]" started-at="2020-10-23T22:26:12 PKT" name="getResult" finished-at="2020-10-23T22:26:12 PKT" duration-ms="311" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetProductByXID status=SUCCESS method=ProductAPI.GetProductByXID()[pri:7, instance:Products.ProductAPI@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="DeleteExistingProduct()[pri:8, instance:Products.ProductAPI@7adda9cc]" started-at="2020-10-23T22:26:12 PKT" name="DeleteExistingProduct" finished-at="2020-10-23T22:26:14 PKT" duration-ms="1877" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteExistingProduct -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Products.ProductAPI@7adda9cc]" started-at="2020-10-23T22:26:14 PKT" name="getResult" finished-at="2020-10-23T22:26:14 PKT" duration-ms="188" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteExistingProduct status=SUCCESS method=ProductAPI.DeleteExistingProduct()[pri:8, instance:Products.ProductAPI@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="GetDeletedProduct()[pri:9, instance:Products.ProductAPI@7adda9cc]" started-at="2020-10-23T22:26:14 PKT" name="GetDeletedProduct" finished-at="2020-10-23T22:26:16 PKT" duration-ms="1635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetDeletedProduct -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Products.ProductAPI@7adda9cc]" started-at="2020-10-23T22:26:16 PKT" name="getResult" finished-at="2020-10-23T22:26:16 PKT" duration-ms="182" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetDeletedProduct status=SUCCESS method=ProductAPI.GetDeletedProduct()[pri:9, instance:Products.ProductAPI@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- Products.ProductAPI -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
