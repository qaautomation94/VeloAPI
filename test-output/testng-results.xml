<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-01-19T18:22:01 PKT" name="Default suite" finished-at="2021-01-19T18:22:42 PKT" duration-ms="41019">
    <groups>
    </groups>
    <test started-at="2021-01-19T18:22:01 PKT" name="Default test" finished-at="2021-01-19T18:22:42 PKT" duration-ms="41019">
      <class name="Price.PriceAPI">
        <test-method is-config="true" signature="TokenGeneration()[pri:0, instance:Price.PriceAPI@794cb805]" started-at="2021-01-19T18:21:52 PKT" name="TokenGeneration" finished-at="2021-01-19T18:22:01 PKT" duration-ms="9056" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TokenGeneration -->
        <test-method is-config="true" signature="ExtentReport()[pri:0, instance:Price.PriceAPI@794cb805]" started-at="2021-01-19T18:22:01 PKT" name="ExtentReport" finished-at="2021-01-19T18:22:02 PKT" duration-ms="667" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExtentReport -->
        <test-method signature="PostProduct()[pri:1, instance:Price.PriceAPI@794cb805]" started-at="2021-01-19T18:22:02 PKT" name="PostProduct" finished-at="2021-01-19T18:22:26 PKT" duration-ms="24336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostProduct -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Price.PriceAPI@794cb805]" started-at="2021-01-19T18:22:26 PKT" name="getResult" finished-at="2021-01-19T18:22:29 PKT" duration-ms="3047" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PostProduct status=SUCCESS method=PriceAPI.PostProduct()[pri:1, instance:Price.PriceAPI@794cb805] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="GetPostedProductPriceGrids()[pri:2, instance:Price.PriceAPI@794cb805]" started-at="2021-01-19T18:22:29 PKT" name="GetPostedProductPriceGrids" finished-at="2021-01-19T18:22:34 PKT" depends-on-methods="Price.PriceAPI.PostProduct" duration-ms="4324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetPostedProductPriceGrids -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Price.PriceAPI@794cb805]" started-at="2021-01-19T18:22:34 PKT" name="getResult" finished-at="2021-01-19T18:22:34 PKT" duration-ms="208" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetPostedProductPriceGrids status=SUCCESS method=PriceAPI.GetPostedProductPriceGrids()[pri:2, instance:Price.PriceAPI@794cb805] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="GetSinglePriceGrid()[pri:3, instance:Price.PriceAPI@794cb805]" started-at="2021-01-19T18:22:34 PKT" name="GetSinglePriceGrid" finished-at="2021-01-19T18:22:35 PKT" depends-on-methods="Price.PriceAPI.GetPostedProductPriceGrids" duration-ms="1681" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSinglePriceGrid -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Price.PriceAPI@794cb805]" started-at="2021-01-19T18:22:35 PKT" name="getResult" finished-at="2021-01-19T18:22:36 PKT" duration-ms="259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetSinglePriceGrid status=SUCCESS method=PriceAPI.GetSinglePriceGrid()[pri:3, instance:Price.PriceAPI@794cb805] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="DeleteSinglePriceGrid()[pri:4, instance:Price.PriceAPI@794cb805]" started-at="2021-01-19T18:22:36 PKT" name="DeleteSinglePriceGrid" finished-at="2021-01-19T18:22:42 PKT" depends-on-methods="Price.PriceAPI.GetSinglePriceGrid" duration-ms="5929" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [400]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at Price.PriceOperations.DeleteSinglePriceGrid(PriceOperations.java:226)
at Price.PriceAPI.DeleteSinglePriceGrid(PriceAPI.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteSinglePriceGrid -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Price.PriceAPI@794cb805]" started-at="2021-01-19T18:22:42 PKT" name="getResult" finished-at="2021-01-19T18:22:42 PKT" duration-ms="397" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteSinglePriceGrid status=FAILURE method=PriceAPI.DeleteSinglePriceGrid()[pri:4, instance:Price.PriceAPI@794cb805] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- Price.PriceAPI -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
